{
  "latest": "",
  "releases": [
{
  "tag_name": "0.0.1",
  "name": "0.0.1",
  "body": "",
  "prerelease": false,
  "draft": false,
  "published_at": "2025-04-21T18:16:53Z",
  "repository": "MichaelCade/kollect"
}
,
{
  "tag_name": "0.0.2",
  "name": "0.0.2",
  "body": "In this release we added the ability to: \r\n\r\n- Inventory your Google Cloud Resources.\r\n- Visualise Veeam inventory using charts.\r\n- Capture & Display KubeVirt based VMs, Storage etc",
  "prerelease": false,
  "draft": false,
  "published_at": "2025-05-13T16:23:07Z",
  "repository": "MichaelCade/kollect"
}
,
{
  "tag_name": "0.0.3",
  "name": "0.0.3",
  "body": "## Recent Improvements\r\n\r\n### UI and User Experience\r\n- **Enhanced Loading Indicators**: Added visual feedback during cloud platform connections and data loading operations\r\n- **Improved Error Handling**: Better error messages for connection issues, particularly for Azure subscription access problems\r\n- **Consistent Visual Cues**: Loading spinners now display for all cloud platform operations\r\n\r\n### Platform Integration Enhancements\r\n- **Azure Integration Fixes**: \r\n  - Improved subscription detection and display\r\n  - Added resilience for permission-related issues\r\n  - Prevent application crashes when encountering access denied errors\r\n  - Better error messages for subscription query failures\r\n\r\n### Backend Improvements\r\n- **Error Handling**: Gracefully handle authorization failures instead of crashing\r\n- **Logging Improvements**: More detailed logs for troubleshooting API connections\r\n- **Stability**: Enhanced error recovery for API requests to various cloud platforms\r\n\r\n### Technical Details\r\n- Added a mutation observer to automatically enhance dynamically created UI elements\r\n- Updated loading indicator z-index to ensure visibility above modals\r\n- Fixed Azure API error handling to continue collecting accessible resources when permission errors occur",
  "prerelease": false,
  "draft": false,
  "published_at": "2025-05-14T16:54:44Z",
  "repository": "MichaelCade/kollect"
}
,
{
  "tag_name": "0.0.4",
  "name": "0.0.4",
  "body": "# Recent Improvements \r\n\r\n## Snapshot Hunter Feature\r\n\r\n- **New Command-Line Interface**: Added `--snapshots` flag to collect snapshots from all platforms without requiring a browser\r\n- **Multi-Platform Support**: Enhanced ability to collect snapshots from Kubernetes, AWS, Azure, and GCP simultaneously\r\n- **Improved Data Handling**: Better handling of snapshot data with proper error checking and detailed logging\r\n- **Test Data Support**: Added sample data for testing and demonstrations without requiring cloud connections\r\n\r\n## Kubernetes Integration\r\n\r\n- **Better CRD Detection**: Improved handling of Custom Resource Definitions with more detailed error messaging\r\n- **Enhanced Volume Snapshot Support**: Added state tracking for volume snapshots (Creating, Ready, Pending)\r\n- **More Robust API Error Handling**: Gracefully handle missing CRDs instead of crashing\r\n\r\n## Cloud Platform Enhancements\r\n\r\n- **AWS Integration**:\r\n  - Added support for collecting EBS and RDS snapshots in a single command\r\n  - Improved error handling for AWS credential issues\r\n\r\n- **Azure Integration**: \r\n  - Enhanced Azure disk snapshot collection\r\n  - Improved error messaging for subscription-related issues\r\n\r\n- **GCP Integration**:\r\n  - Added support for collecting disk snapshots\r\n  - Better project detection and handling\r\n\r\n## UI Improvements\r\n\r\n- **Platform Selection Logic**: Improved UI for selecting which platforms to collect snapshots from\r\n  - Added mutual exclusion for platform selection (radio button-like behavior)\r\n  - Added \"All Platforms\" option for collecting data from all connected platforms\r\n\r\n- **Enhanced Error Feedback**: Better visual indicators and messages when snapshot collection encounters problems\r\n  - Added warning messages when platforms aren't connected\r\n  - Improved error messages with more actionable information\r\n\r\n- **Loading Indicators**: Added proper loading state management during snapshot collection\r\n\r\n## Backend Improvements\r\n\r\n- **Unified Data Structure**: Consistent formatting of snapshot data across all platforms\r\n- **Better Error Handling**: More robust error recovery in snapshot collection\r\n- **Detailed Logging**: Added comprehensive logging of snapshot collection operations\r\n- **Credential Checking**: Added API endpoint to check platform credentials before attempting to collect data\r\n\r\n## Documentation\r\n\r\n- **Updated README**: Enhanced documentation for the Snapshot Hunter feature\r\n- **Usage Examples**: Added examples showing how to use the feature from command line and browser\r\n\r\n",
  "prerelease": false,
  "draft": false,
  "published_at": "2025-05-16T14:11:13Z",
  "repository": "MichaelCade/kollect"
}
,
{
  "tag_name": "0.0.5",
  "name": "0.0.5",
  "body": "# Cost Explorer Enhancement - Pull Request Summary\r\n\r\nKey Features Added\r\nComprehensive Cloud Resource Cost Analysis: Extended the cost explorer to analyze all cloud resources beyond just snapshots, including compute instances, storage, and database services.\r\n\r\nMulti-Platform Support: Full cost analysis for AWS, Azure, and GCP resources with unified interface.\r\n\r\nResource-Specific Cost Calculations:\r\n\r\nAWS: EC2 instances, S3 buckets, RDS instances\r\nAzure: Virtual Machines, Storage Accounts, Disk Snapshots\r\nGCP: Compute Instances, Cloud Storage, Cloud SQL\r\nImproved Cost Visualization: Added charts to visualize costs across platforms and resource types.\r\n\r\nTechnical Improvements\r\nEnhanced Data Collection Architecture:\r\n\r\nCreated ConvertAwsDataForCostAnalysis, ConvertAzureDataForCostAnalysis, and ConvertGcpDataForCostAnalysis functions to standardize resource data.\r\nImplemented ResourceCostEstimator for detailed cost calculations beyond snapshots.\r\nDynamic Cost Calculation:\r\n\r\nInstance-type aware pricing (EC2 t2/t3/m5, Azure B/D/E series, GCP machine types)\r\nRegion-sensitive pricing with automatic regional adjustments\r\nStorage class differentiation (S3 Standard/IA/Glacier, GCP Standard/Nearline/Coldline)\r\nImproved UI Experience:\r\n\r\nModal selector for platform cost analysis\r\nDynamic tables showing resource costs by type\r\nSummary cards with total cost calculations\r\nComprehensive cost charts for visual analysis\r\nData Handling Improvements:\r\n\r\nGraceful handling when no resources found\r\nSupport for mock data to test without cloud credentials\r\nDetailed logging for debugging cost calculations\r\nUser Experience Enhancements\r\nCost Summary Dashboard: Clear overview of total costs across all resources and platforms.\r\n\r\nResource Cost Breakdown: Detailed tables showing cost per resource with region, size, and pricing details.\r\n\r\nCost Disclaimer: Transparent information about pricing sources and calculation methodology.\r\n\r\nPlatform Selection: Easy-to-use modal dialog for selecting which cloud platforms to analyze.\r\n\r\nIntegration Notes\r\nWorks with existing snapshot cost explorer functionality.\r\nUses the same pricing APIs and caching mechanisms.\r\nMaintains consistent user interface design with the rest of the application.\r\nThis enhancement delivers significant value to users by providing comprehensive cost analysis for all cloud resources, enabling better cloud cost management and optimization decisions.",
  "prerelease": false,
  "draft": false,
  "published_at": "2025-05-19T12:43:45Z",
  "repository": "MichaelCade/kollect"
}
,
{
  "tag_name": "0.0.6",
  "name": "0.0.6",
  "body": "- Added HashiCorp Vault prototype (needs more functional testing from both CLI and Browser) \r\n- Fixed Azure Snapshots bug \r\n- Removed multi region snapshot collection, not needed and slowed things down. \r\n- Added Cost functionality and additional chart visuals as well as additional detail on summary tabs \r\n- Fixed release.yaml for Windows binaries and added .exe \r\n- Cost APIs tested and updated \r\n- Moved Buttons in order of relevance, Kubernetes > Public Clouds > Terraform, Vault > Docker (not implemented) > Veeam ",
  "prerelease": false,
  "draft": false,
  "published_at": "2025-05-20T11:05:41Z",
  "repository": "MichaelCade/kollect"
}
,
{
  "tag_name": "0.0.7",
  "name": "0.0.7",
  "body": "[✔️] Refactor the web server handler functions - growth with additional platforms and endpoints we should split into logical modules. https://github.com/MichaelCade/kollect/commit/e6a0d2a78f4bbc9354740a15b744ef5ce1cf7dae\r\n[✔️] Create a Configuration package - Break out the command line flags into a pkg/config/config.go along with environment variables. https://github.com/MichaelCade/kollect/commit/fa23d9607c430a4b62a9b56ea462d21375c75b30\r\n[✔️] Error Handling - Very minimum and debugging error handling at the moment. We should consider pkg/errors/errors.go we should consider a standard approach. https://github.com/MichaelCade/kollect/commit/ed295b8738f3ef7e79d4be4870ada4f70c61514a\r\n[✔️] Veeam Modal change error - Something I changed broke browser ability to hit the Veeam API and display the inventory, had to edit veeam.js. https://github.com/MichaelCade/kollect/commit/da74cc287687678a6f891576c37ce996de361dbc\r\n[✔️] API versioning - This is going to hurt when things get changed or start to break across the whole code base.\r\nAWS and Azure refactor - https://github.com/MichaelCade/kollect/commit/834fb54de44eadd7c251e4254a4799bb988bcd47\r\nDocker - https://github.com/MichaelCade/kollect/commit/8624cfabd5ed5af5fa107c3f172b809cdf22ed29\r\nGCP - https://github.com/MichaelCade/kollect/commit/24316876ea4db6e0305e68dc1195e4a8d3d79696\r\nTerraform - https://github.com/MichaelCade/kollect/commit/d471a6d8588ab5f6a15d0da950231301899a0099\r\nVault - https://github.com/MichaelCade/kollect/commit/227f87d903741de1a82060994b5c63c84695a5fb\r\nVeeam - https://github.com/MichaelCade/kollect/commit/dd29ad71031a160ae2dc404a4f6bf174c46bbfd9",
  "prerelease": false,
  "draft": false,
  "published_at": "2025-06-10T08:54:49Z",
  "repository": "MichaelCade/kollect"
}
,
{
  "tag_name": "0.0.8",
  "name": "0.0.8",
  "body": "MCP (Model Context Protocol) Integration\r\n\r\nThis release introduces native MCP server support, enabling AI assistants to directly query and analyze your multi-cloud infrastructure inventory through a standardized protocol.\r\n\r\nNew Features\r\n- MCP Server Mode: New --mcp flag enables kollect to run as an MCP server\r\n- AI Assistant Integration: Direct integration with Claude, VS Code Copilot, and other MCP-compatible AI tools\r\n- Real-time Inventory Queries: AI assistants can now query live infrastructure data across AWS, Azure, GCP, and Kubernetes\r\n- Enhanced Workflow: Seamless infrastructure analysis and cost optimization through natural language queries\r\nUsage\r\n\r\n`kollect --inventory all --mcp`\r\n\r\nConfigure in your MCP client (e.g., VS Code settings) to enable AI-powered infrastructure insights and automated analysis of your cloud resources, costs, and compliance status.",
  "prerelease": false,
  "draft": false,
  "published_at": "2025-10-21T14:26:48Z",
  "repository": "MichaelCade/kollect"
}
,
{
  "tag_name": "0.0.9",
  "name": "0.0.9",
  "body": "# 🧭 Backup Compass - Release Summary\r\n\r\n## Overview\r\n**Backup Compass** is a specialised hidden menu feature that extends Kollect into a backup platform inventory. It provides a centralized dashboard for connecting to, and providing an inventory of your enterprise backup platforms from a single unified interface and API.\r\n\r\n## Key Features\r\n\r\n### 🔌 **Multi-Platform Support**\r\n- **Veeam Backup & Replication** - Full integration with inventory collection\r\n- **Rubrik** - Connection interface with mock data capability  \r\n- **Commvault Complete Data Protection** - Connection interface with comprehensive mock data\r\n- **Veritas NetBackup** - Connection interface with mock data\r\n- **Veeam Kasten by Veeam** - Coming soon placeholder\r\n\r\n### 🎯 **Access Method**\r\n- **Hidden Menu Activation**: Access via compass button (🧭) in the main interface\r\n- **Dedicated Mode**: Launch directly with `./kollect --backup` flag\r\n- **Seamless Navigation**: Toggle between standard and backup modes\r\n\r\n### 🖥️ **User Interface Features**\r\n- **Backup Mode Indicator**: Visual indicator showing active backup platform mode\r\n- **Connection Status Badges**: Real-time connection status for each platform (🟢 connected / 🔴 disconnected)\r\n- **Platform-Specific Modals**: Custom connection dialogs for each backup platform\r\n- **Mock Data Toggle**: Built-in mock data capability for testing and demos\r\n\r\n### 📊 **Data Collection & Visualization**\r\n- **Comprehensive Inventory**: Backup jobs, repositories, clients, storage pools\r\n- **Interactive Tables**: Sortable, searchable data presentation\r\n- **Export Capabilities**: JSON export of collected backup inventory\r\n- **Chart Integration**: Visual analytics for backup infrastructure\r\n\r\n## Platform-Specific Details\r\n\r\n### **Veeam Backup & Replication**\r\n- Server information and version details\r\n- Backup job status and statistics\r\n- Repository inventory and capacity\r\n- Proxy server information\r\n- Scale-out repository details\r\n\r\n### **Rubrik** \r\n- Cluster connection management\r\n- Mock data for development/testing\r\n- SLA policy information\r\n- Protected objects inventory\r\n\r\n### **Commvault**\r\n- CommServe connection (port 81)\r\n- Client group management\r\n- Storage pool monitoring\r\n- MediaAgent information\r\n- Comprehensive mock dataset\r\n\r\n### **Veritas NetBackup**\r\n- Master server connectivity\r\n- Policy and schedule information\r\n- Storage unit management\r\n- Client inventory\r\n\r\n### **Backend Integration**\r\n- Platform-specific handlers in Go backend\r\n- Connection validation APIs (`/api/check-credentials`)\r\n- Data collection endpoints (`/api/{platform}/connect`)\r\n- Mock data generation for testing\r\n\r\n## User Experience\r\n\r\n### **Connection Flow**\r\n1. Click platform button to open connection modal\r\n2. Enter credentials or toggle mock mode\r\n3. Real-time connection validation\r\n4. Automatic data collection and display\r\n5. Visual feedback with connection badges\r\n\r\n### **Navigation**\r\n- **Seamless Mode Switching**: Toggle between standard Kollect and Backup Compass\r\n- **Persistent State**: Connections maintained across sessions\r\n- **Quick Access**: Direct backup mode launch capability\r\n\r\n## Future Roadmap\r\n- **Veeam Kasten Integration**: Native Kubernetes backup platform support\r\n\r\n---",
  "prerelease": false,
  "draft": false,
  "published_at": "2025-10-23T10:06:49Z",
  "repository": "MichaelCade/kollect"
}
,
{
  "tag_name": "0.1.0",
  "name": "0.1.0",
  "body": "# vSphere Integration & Enhanced Infrastructure Coverage\r\n\r\n### **🔥 Major Feature: VMware vSphere Integration**\r\nKollect now provides comprehensive VMware vSphere support with enterprise-grade capabilities:\r\n\r\n- **📊 Performance Monitoring**: Live CPU and Memory metrics from vSphere QuickStats API\r\n- **🏢 Complete Infrastructure Inventory**: VMs, ESXi hosts, datastores, clusters, networks, and resource pools\r\n- **🔍 Advanced Diagnostics**: Host status tooltips with detailed troubleshooting guidance\r\n- **⚡ Performance Analysis**: Resource efficiency scoring (Oversized/Undersized/Efficient)\r\n- **🔒 Enterprise Security**: SSL certificate validation with insecure connection support\r\n\r\n### **🛠️ Enhanced Command Line Experience**\r\n- **New `--inventory vsphere`** - Dedicated vSphere collection mode\r\n- **Environment Variable Support** - `VSPHERE_SERVER`, `VSPHERE_USERNAME`, `VSPHERE_PASSWORD`, `VSPHERE_INSECURE`\r\n- **Interactive Credential Prompts** - Streamlined setup process\r\n- **Auto-Discovery in `--inventory all`** - Seamless multi-platform collection\r\n\r\n### **🎨 UI/UX Enhancements**\r\n- **Red Hat OpenShift Button**: Coming soon modal with planned feature preview\r\n- **vSphere Connection Modal**: Real-time connection testing and validation\r\n- **Performance Metrics Display**: Live performance data visualization\r\n- **Status Indicators**: Visual connection health for all platforms\r\n## 🔮 **Coming Soon**\r\n- **Red Hat OpenShift Integration**: Comprehensive cluster inventory and management\r\n- **Platform Mapper**: Visual infrastructure dependency mapping\r\n- **Enhanced Performance Analytics**: Historical trending and capacity planning\r\n",
  "prerelease": false,
  "draft": false,
  "published_at": "2025-10-23T16:30:57Z",
  "repository": "MichaelCade/kollect"
}
,
{
  "tag_name": "0.1.1",
  "name": "0.1.1",
  "body": "Fixed some missing web files.",
  "prerelease": false,
  "draft": false,
  "published_at": "2025-10-29T09:28:24Z",
  "repository": "MichaelCade/kollect"
}

  ]
}
